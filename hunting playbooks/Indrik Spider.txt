Technique ID: T1003.001
Technique Name: LSASS Memory
Kill Chain Phases: credential-access
  Pseudocode:
    Title: Suspicious Arguments
    
    
    Title: Pseudocode
    process = search Process:Create
    port_fwd = filter process where (command_line match "-R .* -pw")
    scp = filter process where (command_line match "-pw .* .* .*@.*"
    mimikatz = filter process where (command_line match "sekurlsa")
    rar = filter process where (command_line match " -hp ")
    archive = filter process where (command_line match ".* a .*")
    ip_addr = filter process where (command_line match \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})
    
    output port_fwd, scp, mimikatz, rar, archive, ip_addr
    
    Title: Splunk, Sysmon native
    index=__your_sysmon_index__ EventCode=1 (CommandLine="* -R * -pw*" OR CommandLine="* -pw * *@*" OR CommandLine="*sekurlsa*" OR CommandLine="* -hp *" OR CommandLine="* a *")
    
    Title: Eql, EQL native
    process where subtype.create and
      (command_line == "* -R * -pw*" or command_line == "* -pw * *@*" or command_line == "*sekurlsa*" or command_line == "* -hp *" or command_line == "* a *")
    
    Title: Splunk, Sysmon native
    index=__your_sysmon_index__ EventCode=1 |regex CommandLine=".*\b(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}\b.*"
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $Process=regex(.*(\-r.*\-pw|\-pw.*\@|sekurlsa|\-hp| a |\\d\{1\,3\}\\\.\\d\{1\,3\}\\\.\\d\{1\,3\}).*)i limit 100
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 (command="* -R * -pw*" OR command="* -pw * *@*" OR command="*sekurlsa*" OR command="* -hp *" OR command="* a *")
    
    Title: Test Case 1
    putty.exe -pw <password> -R <port>:<host> <user>@<host>
    
    Title: Test Case 2
    7z.exe a test.zip test.txt
    
    Title: 
    process = search Process:Create
    port_fwd = filter process where (command_line match "-R .* -pw")
    scp = filter process where (command_line match "-pw .* .* .*@.*"
    mimikatz = filter process where (command_line match "sekurlsa")
    rar = filter process where (command_line match " -hp ")
    archive = filter process where (command_line match ".* a .*")
    ip_addr = filter process where (command_line match \d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})
    
    output port_fwd, scp, mimikatz, rar, archive, ip_addr
    
    Title: Splunk, Sysmon native
    index=__your_sysmon_index__ EventCode=1 (CommandLine="* -R * -pw*" OR CommandLine="* -pw * *@*" OR CommandLine="*sekurlsa*" OR CommandLine="* -hp *" OR CommandLine="* a *")
    
    Title: Eql, EQL native
    process where subtype.create and
      (command_line == "* -R * -pw*" or command_line == "* -pw * *@*" or command_line == "*sekurlsa*" or command_line == "* -hp *" or command_line == "* a *")
    
    Title: Splunk, Sysmon native
    index=__your_sysmon_index__ EventCode=1 |regex CommandLine=".*\b(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}\b.*"
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $Process=regex(.*(\-r.*\-pw|\-pw.*\@|sekurlsa|\-hp| a |\\d\{1\,3\}\\\.\\d\{1\,3\}\\\.\\d\{1\,3\}).*)i limit 100
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 (command="* -R * -pw*" OR command="* -pw * *@*" OR command="*sekurlsa*" OR command="* -hp *" OR command="* a *")
    
    Title: Test Case 1
    putty.exe -pw <password> -R <port>:<host> <user>@<host>
    
    Title: Test Case 2
    7z.exe a test.zip test.txt
    Title: Credential Dumping via Mimikatz
    
    
    Title: Common Mimikatz GrantedAccess Patterns (Splunk, Sysmon native)
    index=__your_sysmon_data__ EventCode=10
    TargetImage="C:\\WINDOWS\\system32\\lsass.exe"
    (GrantedAccess=0x1410 OR GrantedAccess=0x1010 OR GrantedAccess=0x1438 OR GrantedAccess=0x143a OR GrantedAccess=0x1418)
    CallTrace="C:\\windows\\SYSTEM32\\ntdll.dll+*|C:\\windows\\System32\\KERNELBASE.dll+20edd|UNKNOWN(*)"
    | table _time hostname user SourceImage GrantedAccess
    
    Title: Outliers (Splunk, Sysmon native)
    earliest=-d@d latest=now() index=__your_sysmon_data__
      EventCode=10
      TargetImage="C:\\WINDOWS\\system32\\lsass.exe"
      (GrantedAccess=0x1410 OR GrantedAccess=0x1010 OR GrantedAccess=0x1438 OR GrantedAccess=0x143a OR GrantedAccess=0x1418)
    | search NOT [ search earliest=-7d@d latest=-2d@d index=__your_sysmon_data__ EventCode=10 TargetImage="C:\\WINDOWS\\system32\\lsass.exe" (GrantedAccess=0x1410 OR GrantedAccess=0x1010 OR GrantedAccess=0x1438 OR GrantedAccess=0x143a OR GrantedAccess=0x1418)
      | dedup SourceImage
      | fields SourceImage ]
    | table  _time hostname user SourceImage GrantedAccess
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=10 image="C:\Windows\system32\lsass.exe" (access="0x1410" OR access="0x1010" OR access="0x1438" OR access="0x143a" OR access="0x1418") call_trace="C:\windows\SYSTEM32\ntdll.dll+*|C:\windows\System32\KERNELBASE.dll+20edd|UNKNOWN(*)"
    | fields log_ts, host, user, source_image, access
    Title: Lsass Process Dump via Procdump
    
    
    Title: Procdump - Process Create (Pseudocode)
    processes = search Process:Create
    procdump_lsass = filter processes where (
      exe = "procdump*.exe"  and
      command_line = "*lsass*")
    output procdump_lsass
    
    Title: Procdump - Process Create (Splunk, Sysmon native)
    index=__your_sysmon_index__ EventCode=1 Image="*\\procdump*.exe" CommandLine="*lsass*"
    
    Title: Procdump - Process Access (Splunk, Sysmon native)
    index=__your_sysmon_index__ EventCode=10 TargetImage="C:\\WINDOWS\\system32\\lsass.exe" GrantedAccess="0x1FFFFF" ("procdump")
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\procdump*.exe" command="*lsass*"
    
    Title: 
    processes = search Process:Create
    procdump_lsass = filter processes where (
      exe = "procdump*.exe"  and
      command_line = "*lsass*")
    output procdump_lsass
    
    Title: Procdump - Process Create (Splunk, Sysmon native)
    index=__your_sysmon_index__ EventCode=1 Image="*\\procdump*.exe" CommandLine="*lsass*"
    
    Title: Procdump - Process Access (Splunk, Sysmon native)
    index=__your_sysmon_index__ EventCode=10 TargetImage="C:\\WINDOWS\\system32\\lsass.exe" GrantedAccess="0x1FFFFF" ("procdump")
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\procdump*.exe" command="*lsass*"
    Title: Credential Dumping via Windows Task Manager
    
    
    Title: Procdump - File Create (Pseudocode)
    files = search File:Create
    lsass_dump = filter files where (
      file_name = "lsass*.dmp"  and
      image_path = "C:\Windows\*\taskmgr.exe")
    output lsass_dump
    
    Title: Procdump - File Create (Splunk, Sysmon native)
    index=__your_sysmon_index__ EventCode=11 TargetFilename="*lsass*.dmp" Image="C:\\Windows\\*\\taskmgr.exe"
    
    Title: Procdump - File Create (Eql, EQL native)
    file where file_name == "lsass*.dmp" and process_name == "taskmgr.exe"
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=11 file="*lsass*.dmp" source_image="C:\Windows\*\taskmgr.exe"
    
    Title: 
    files = search File:Create
    lsass_dump = filter files where (
      file_name = "lsass*.dmp"  and
      image_path = "C:\Windows\*\taskmgr.exe")
    output lsass_dump
    
    Title: Procdump - File Create (Splunk, Sysmon native)
    index=__your_sysmon_index__ EventCode=11 TargetFilename="*lsass*.dmp" Image="C:\\Windows\\*\\taskmgr.exe"
    
    Title: Procdump - File Create (Eql, EQL native)
    file where file_name == "lsass*.dmp" and process_name == "taskmgr.exe"
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=11 file="*lsass*.dmp" source_image="C:\Windows\*\taskmgr.exe"
    Title: Create Remote Thread into LSASS
    
    
    Title: Pseudocode â€“ Remote thread creation into LSASS 
    remote_threads = search Thread:remote_create
    lsass_remote_create = filter remote_threads where "lsass" in raw event
    output lsass_remote_create
    
    Title: Splunk code (Splunk, )
    `sysmon` EventID=8 TargetImage=*lsass.exe | stats count min(_time) as firstTime max(_time) as lastTime by Computer, EventCode, TargetImage, TargetProcessId | rename Computer as dest
    
    Title: Test Case 1
    python attack_range.py replay -dn data_dump [--dump NAME_OF_DUMP]
    
    Title: Test Case 2
    Invoke-AtomicTest T1003.001
    
    Title: 
    remote_threads = search Thread:remote_create
    lsass_remote_create = filter remote_threads where "lsass" in raw event
    output lsass_remote_create
    
    Title: Splunk code (Splunk, )
    `sysmon` EventID=8 TargetImage=*lsass.exe | stats count min(_time) as firstTime max(_time) as lastTime by Computer, EventCode, TargetImage, TargetProcessId | rename Computer as dest
    
    Title: Test Case 1
    python attack_range.py replay -dn data_dump [--dump NAME_OF_DUMP]
    
    Title: Test Case 2
    Invoke-AtomicTest T1003.001
----------------------------------------
Technique ID: T1036.005
Technique Name: Match Legitimate Name or Location
Kill Chain Phases: defense-evasion
  Pseudocode:
    Title: Common Windows Process Masquerading
    
    
    Title: Pseudocode - Common Windows Process Masquerading 
    processes = search Process:*
    suspicious_processes = filter processes where (
      (exe=svchost.exe AND (image_path!="C:\\Windows\\System32\\svchost.exe" OR process_path!="C:\\Windows\\SysWow64\\svchost.exe"))
      OR (exe=smss.exe AND image_path!="C:\\Windows\\System32\\smss.exe")
      OR (exe=wininit.exe AND image_path!="C:\\Windows\\System32\\wininit.exe")
      OR (exe=taskhost.exe AND image_path!="C:\\Windows\\System32\\taskhost.exe")
      OR (exe=lasass.exe AND image_path!="C:\\Windows\\System32\\lsass.exe")
      OR (exe=winlogon.exe AND image_path!="C:\\Windows\\System32\\winlogon.exe")
      OR (exe=csrss.exe AND image_path!="C:\\Windows\\System32\\csrss.exe")
      OR (exe=services.exe AND image_path!="C:\\Windows\\System32\\services.exe")
      OR (exe=lsm.exe AND image_path!="C:\\Windows\\System32\\lsm.exe")
      OR (exe=explorer.exe AND image_path!="C:\\Windows\\explorer.exe")
      )
    output suspicious_processes
    
    Title: Splunk Search - Common Windows Process Masquerading (Splunk, Sysmon native)
    index=__your_sysmon_index__ source="XmlWinEventLog:Microsoft-Windows-Sysmon/Operational" AND (
    (process_name=svchost.exe AND NOT (process_path="C:\\Windows\\System32\\svchost.exe" OR process_path="C:\\Windows\\SysWow64\\svchost.exe"))
    OR (process_name=smss.exe AND NOT process_path="C:\\Windows\\System32\\smss.exe")
    OR (process_name=wininit.exe AND NOT process_path="C:\\Windows\\System32\\wininit.exe")
    OR (process_name=taskhost.exe AND NOT process_path="C:\\Windows\\System32\\taskhost.exe")
    OR (process_name=lasass.exe AND NOT process_path="C:\\Windows\\System32\\lsass.exe")
    OR (process_name=winlogon.exe AND NOT process_path="C:\\Windows\\System32\\winlogon.exe")
    OR (process_name=csrss.exe AND NOT process_path="C:\\Windows\\System32\\csrss.exe")
    OR (process_name=services.exe AND NOT process_path="C:\\Windows\\System32\\services.exe")
    OR (process_name=lsm.exe AND NOT process_path="C:\\Windows\\System32\\lsm.exe")
    OR (process_name=explorer.exe AND NOT process_path="C:\\Windows\\explorer.exe")
    )
    
    Title: 
    processes = search Process:*
    suspicious_processes = filter processes where (
      (exe=svchost.exe AND (image_path!="C:\\Windows\\System32\\svchost.exe" OR process_path!="C:\\Windows\\SysWow64\\svchost.exe"))
      OR (exe=smss.exe AND image_path!="C:\\Windows\\System32\\smss.exe")
      OR (exe=wininit.exe AND image_path!="C:\\Windows\\System32\\wininit.exe")
      OR (exe=taskhost.exe AND image_path!="C:\\Windows\\System32\\taskhost.exe")
      OR (exe=lasass.exe AND image_path!="C:\\Windows\\System32\\lsass.exe")
      OR (exe=winlogon.exe AND image_path!="C:\\Windows\\System32\\winlogon.exe")
      OR (exe=csrss.exe AND image_path!="C:\\Windows\\System32\\csrss.exe")
      OR (exe=services.exe AND image_path!="C:\\Windows\\System32\\services.exe")
      OR (exe=lsm.exe AND image_path!="C:\\Windows\\System32\\lsm.exe")
      OR (exe=explorer.exe AND image_path!="C:\\Windows\\explorer.exe")
      )
    output suspicious_processes
    
    Title: Splunk Search - Common Windows Process Masquerading (Splunk, Sysmon native)
    index=__your_sysmon_index__ source="XmlWinEventLog:Microsoft-Windows-Sysmon/Operational" AND (
    (process_name=svchost.exe AND NOT (process_path="C:\\Windows\\System32\\svchost.exe" OR process_path="C:\\Windows\\SysWow64\\svchost.exe"))
    OR (process_name=smss.exe AND NOT process_path="C:\\Windows\\System32\\smss.exe")
    OR (process_name=wininit.exe AND NOT process_path="C:\\Windows\\System32\\wininit.exe")
    OR (process_name=taskhost.exe AND NOT process_path="C:\\Windows\\System32\\taskhost.exe")
    OR (process_name=lasass.exe AND NOT process_path="C:\\Windows\\System32\\lsass.exe")
    OR (process_name=winlogon.exe AND NOT process_path="C:\\Windows\\System32\\winlogon.exe")
    OR (process_name=csrss.exe AND NOT process_path="C:\\Windows\\System32\\csrss.exe")
    OR (process_name=services.exe AND NOT process_path="C:\\Windows\\System32\\services.exe")
    OR (process_name=lsm.exe AND NOT process_path="C:\\Windows\\System32\\lsm.exe")
    OR (process_name=explorer.exe AND NOT process_path="C:\\Windows\\explorer.exe")
    )
----------------------------------------
Technique ID: T1070.001
Technique Name: Clear Windows Event Logs
Kill Chain Phases: defense-evasion
  Pseudocode:
    Title: User Activity from Clearing Event Logs
    
    
    Title: PseudoCode for dedicated EventID EventLog deletion (Pseudocode)
    ([log_name] == "Security" and [event_code] in [1100, 1102, 1104]) or
    ([log_name] == "System" and [event_code] == 104)
    
    Title: LogPoint version of the above pseudocode. (Logpoint, LogPoint native)
    norm_id=WinServer ((channel="Security" event_id IN [1100,1102]) OR (channel="System" event_id=104))
    
    Title: Splunk search - Detecting log clearing with wevtutil (Splunk, Sysmon native)
    index=__your_sysmon_index__ sourcetype= __your__windows__sysmon__sourcetype EventCode=1 (Image=*wevtutil* CommandLine=*cl* (CommandLine=*System* OR CommandLine=*Security* OR CommandLine=*Setup* OR CommandLine=*Application*) OR Clear-EventLog OR Limit-EventLog OR (Remove-Item AND .evtx) OR Remove-EventLog)
    
    Title: Test Case 1
    Clear-Eventlog Security
    Clear-Eventlog System
    
    Title: Test Case 2
    Limit-EventLog -LogName Security -OverflowAction DoNotOverwrite
    
    Title: Test Case 3
    del C:\Windows\System32\winevt\logs\Security.evtx
    Remove-Item C:\Windows\System32\winevt\logs\Security.evtx
    
    Title: Test Case 4
    Remove-EventLog -LogName Security
    
    Title: 
    ([log_name] == "Security" and [event_code] in [1100, 1102, 1104]) or
    ([log_name] == "System" and [event_code] == 104)
    
    Title: LogPoint version of the above pseudocode. (Logpoint, LogPoint native)
    norm_id=WinServer ((channel="Security" event_id IN [1100,1102]) OR (channel="System" event_id=104))
    
    Title: Splunk search - Detecting log clearing with wevtutil (Splunk, Sysmon native)
    index=__your_sysmon_index__ sourcetype= __your__windows__sysmon__sourcetype EventCode=1 (Image=*wevtutil* CommandLine=*cl* (CommandLine=*System* OR CommandLine=*Security* OR CommandLine=*Setup* OR CommandLine=*Application*) OR Clear-EventLog OR Limit-EventLog OR (Remove-Item AND .evtx) OR Remove-EventLog)
    
    Title: Test Case 1
    Clear-Eventlog Security
    Clear-Eventlog System
    
    Title: Test Case 2
    Limit-EventLog -LogName Security -OverflowAction DoNotOverwrite
    
    Title: Test Case 3
    del C:\Windows\System32\winevt\logs\Security.evtx
    Remove-Item C:\Windows\System32\winevt\logs\Security.evtx
    
    Title: Test Case 4
    Remove-EventLog -LogName Security
    
    Title: 
    norm_id=WinServer ((channel="Security" event_id IN [1100,1102]) OR (channel="System" event_id=104))
    
    Title: Splunk search - Detecting log clearing with wevtutil (Splunk, Sysmon native)
    index=__your_sysmon_index__ sourcetype= __your__windows__sysmon__sourcetype EventCode=1 (Image=*wevtutil* CommandLine=*cl* (CommandLine=*System* OR CommandLine=*Security* OR CommandLine=*Setup* OR CommandLine=*Application*) OR Clear-EventLog OR Limit-EventLog OR (Remove-Item AND .evtx) OR Remove-EventLog)
    
    Title: Test Case 1
    Clear-Eventlog Security
    Clear-Eventlog System
    
    Title: Test Case 2
    Limit-EventLog -LogName Security -OverflowAction DoNotOverwrite
    
    Title: Test Case 3
    del C:\Windows\System32\winevt\logs\Security.evtx
    Remove-Item C:\Windows\System32\winevt\logs\Security.evtx
    
    Title: Test Case 4
    Remove-EventLog -LogName Security
    Title: Clearing Windows Logs with Wevtutil
    
    
    Title: Splunk search - Detecting log clearing with wevtutil (Splunk, Sysmon native)
    index=__your_sysmon_index__ sourcetype= __your__windows__sysmon__sourcetype EventCode=1 Image=*wevtutil* CommandLine=*cl* (CommandLine=*System* OR CommandLine=*Security* OR CommandLine=*Setup* OR CommandLine=*Application*)
----------------------------------------
Technique ID: T1562.001
Technique Name: Disable or Modify Tools
Kill Chain Phases: defense-evasion
  Pseudocode:
    Title: Quick execution of a series of suspicious commands
    
    
    Title: Pseudocode
    processes = search Process:Create
    reg_processes = filter processes where (exe == "arp.exe" or exe == "at.exe" or exe == "attrib.exe"
     or exe == "cscript.exe" or exe == "dsquery.exe" or exe == "hostname.exe"
     or exe == "ipconfig.exe" or exe == "mimikatz.exe" or exe == "nbstat.exe"
     or exe == "net.exe" or exe == "netsh.exe" or exe == "nslookup.exe"
     or exe == "ping.exe" or exe == "quser.exe" or exe == "qwinsta.exe"
     or exe == "reg.exe" or exe == "runas.exe" or exe == "sc.exe"
     or exe == "schtasks.exe" or exe == "ssh.exe" or exe == "systeminfo.exe"
     or exe == "taskkill.exe" or exe == "telnet.exe" or exe == "tracert.exe"
     or exe == "wscript.exe" or exe == "xcopy.exe")
    reg_grouped = group reg by hostname, ppid where(max time between two events is 30 minutes)
    output reg_grouped
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $App=regex(arp\.exe|at\.exe|attrib\.exe|cscript\.exe|dsquery\.exe|hostname\.exe|ipconfig\.exe|mimikatz.exe|nbstat\.exe|net\.exe|netsh\.exe|nslookup\.exe|ping\.exe|quser\.exe|qwinsta\.exe|reg\.exe|runas\.exe|sc\.exe|schtasks\.exe|ssh\.exe|systeminfo\.exe|taskkill\.exe|telnet\.exe|tracert\.exe|wscript\.exe|xcopy\.exe)i group count_unique $App limit 100
    >>_agg count
    >>_checkif int_compare Count > 1 include
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image IN ["*\arp.exe", "*\at.exe", "*\attrib.exe", "*\cscript.exe", "*\dsquery.exe", "*\hostname.exe", "*\ipconfig.exe", "*\mimikatz.exe", "*\nbstat.exe", "*\net.exe", "*\netsh.exe", "*\nslookup.exe", "*\ping.exe", "*\quser.exe", "*\qwinsta.exe", "*\reg.exe", "*\runas.exe", "*\sc.exe", "*\schtasks.exe", "*\ssh.exe", "*\systeminfo.exe", "*\taskkill.exe", "*\telnet.exe", "*\tracert.exe", "*\wscript.exe", "*\xcopy.exe"]
    | chart count() as cnt by host
    | search cnt > 1
    
    Title: Test Case 1
    ipconfig /all
    hostname
    systeminfo
    reg.exe Query HKLM\Software\Microsoft
    
    Title: 
    processes = search Process:Create
    reg_processes = filter processes where (exe == "arp.exe" or exe == "at.exe" or exe == "attrib.exe"
     or exe == "cscript.exe" or exe == "dsquery.exe" or exe == "hostname.exe"
     or exe == "ipconfig.exe" or exe == "mimikatz.exe" or exe == "nbstat.exe"
     or exe == "net.exe" or exe == "netsh.exe" or exe == "nslookup.exe"
     or exe == "ping.exe" or exe == "quser.exe" or exe == "qwinsta.exe"
     or exe == "reg.exe" or exe == "runas.exe" or exe == "sc.exe"
     or exe == "schtasks.exe" or exe == "ssh.exe" or exe == "systeminfo.exe"
     or exe == "taskkill.exe" or exe == "telnet.exe" or exe == "tracert.exe"
     or exe == "wscript.exe" or exe == "xcopy.exe")
    reg_grouped = group reg by hostname, ppid where(max time between two events is 30 minutes)
    output reg_grouped
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $App=regex(arp\.exe|at\.exe|attrib\.exe|cscript\.exe|dsquery\.exe|hostname\.exe|ipconfig\.exe|mimikatz.exe|nbstat\.exe|net\.exe|netsh\.exe|nslookup\.exe|ping\.exe|quser\.exe|qwinsta\.exe|reg\.exe|runas\.exe|sc\.exe|schtasks\.exe|ssh\.exe|systeminfo\.exe|taskkill\.exe|telnet\.exe|tracert\.exe|wscript\.exe|xcopy\.exe)i group count_unique $App limit 100
    >>_agg count
    >>_checkif int_compare Count > 1 include
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image IN ["*\arp.exe", "*\at.exe", "*\attrib.exe", "*\cscript.exe", "*\dsquery.exe", "*\hostname.exe", "*\ipconfig.exe", "*\mimikatz.exe", "*\nbstat.exe", "*\net.exe", "*\netsh.exe", "*\nslookup.exe", "*\ping.exe", "*\quser.exe", "*\qwinsta.exe", "*\reg.exe", "*\runas.exe", "*\sc.exe", "*\schtasks.exe", "*\ssh.exe", "*\systeminfo.exe", "*\taskkill.exe", "*\telnet.exe", "*\tracert.exe", "*\wscript.exe", "*\xcopy.exe"]
    | chart count() as cnt by host
    | search cnt > 1
    
    Title: Test Case 1
    ipconfig /all
    hostname
    systeminfo
    reg.exe Query HKLM\Software\Microsoft
    Title: User Activity from Stopping Windows Defensive Services
    
    
    Title: Pseudocode
    log_name == "System" AND
    event_code == "7036"
    param1 in ["Windows Defender", "Windows Firewall"] AND
    param2 == "stopped"
    
    Title: Logpoint, LogPoint native
    norm_id=WinServer channel="System" event_id=7036 param1 in ["Windows Defender", "Windows Firewall"] param2="stopped"
    
    Title: Test Case 1
    Stop-Service -displayname "Windows Firewall"
    Stop-Service -displayname "Windows Defender"
    
    Title: 
    log_name == "System" AND
    event_code == "7036"
    param1 in ["Windows Defender", "Windows Firewall"] AND
    param2 == "stopped"
    
    Title: Logpoint, LogPoint native
    norm_id=WinServer channel="System" event_id=7036 param1 in ["Windows Defender", "Windows Firewall"] param2="stopped"
    
    Title: Test Case 1
    Stop-Service -displayname "Windows Firewall"
    Stop-Service -displayname "Windows Defender"
    Title: Detecting Tampering of Windows Defender Command Prompt
    
    
    Title: Splunk search - Detecting Tampering of Windows Defender Command Prompt (Splunk, Sysmon native)
    index= __your_sysmon__index__ EventCode=1 Image = "C:\\Windows\\System32\\sc.exe"  | regex CommandLine="^sc\s*(config|stop|query)\sWinDefend$"
    
    Title: Splunk search - Detecting Tampering of Windows Defender Command Prompt (Pseudocode)
    processes = search Process:Create
    target_processes = filter processes where (
                       (exe="C:\\Windows\\System32\\sc.exe") AND (command_line="sc *config*" OR command_line="sc *stop*" OR command_line="sc *query*")
                       )
    output target_processes
    
    Title: 
    processes = search Process:Create
    target_processes = filter processes where (
                       (exe="C:\\Windows\\System32\\sc.exe") AND (command_line="sc *config*" OR command_line="sc *stop*" OR command_line="sc *query*")
                       )
    output target_processes
----------------------------------------
Technique ID: T1059.001
Technique Name: PowerShell
Kill Chain Phases: execution
  Pseudocode:
    Title: Powershell Execution
    
    
    Title: Pseudocode
    process = search Process:Create
    powershell = filter process where (exe == "powershell.exe" AND parent_exe != "explorer.exe" )
    output powershell
    
    Title: Splunk, Sysmon native
    index=__your_sysmon_index__ EventCode=1 Image="C:\\Windows\\*\\powershell.exe" ParentImage!="C:\\Windows\\explorer.exe"|stats values(CommandLine) as "Command Lines" values(ParentImage) as "Parent Images" by ComputerName
    
    Title: Eql, EQL native
    process where subtype.create and
      (process_name == "powershell.exe" and parent_process_name != "explorer.exe")
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $App=powershell.exe NOT $ParentProcess=regex(.*explorer.exe.*)i limit 30
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\powershell.exe" -parent_image="C:\Windows\explorer.exe"
    
    Title: 
    process = search Process:Create
    powershell = filter process where (exe == "powershell.exe" AND parent_exe != "explorer.exe" )
    output powershell
    
    Title: Splunk, Sysmon native
    index=__your_sysmon_index__ EventCode=1 Image="C:\\Windows\\*\\powershell.exe" ParentImage!="C:\\Windows\\explorer.exe"|stats values(CommandLine) as "Command Lines" values(ParentImage) as "Parent Images" by ComputerName
    
    Title: Eql, EQL native
    process where subtype.create and
      (process_name == "powershell.exe" and parent_process_name != "explorer.exe")
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $App=powershell.exe NOT $ParentProcess=regex(.*explorer.exe.*)i limit 30
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\powershell.exe" -parent_image="C:\Windows\explorer.exe"
    Title: Remote PowerShell Sessions
    
    
    Title: Pseudocode
    process = search Process:Create
    wsmprovhost = filter process where (exe == "wsmprovhost.exe" and parent_exe == "svchost.exe")
    
    Title: Eql, EQL native
    process where subtype.create and
      (process_name == "wsmprovhost.exe" and parent_process_name == "svchost.exe")
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\wsmprovhost.exe" parent_image="*\svchost.exe"
    
    Title: 
    process = search Process:Create
    wsmprovhost = filter process where (exe == "wsmprovhost.exe" and parent_exe == "svchost.exe")
    
    Title: Eql, EQL native
    process where subtype.create and
      (process_name == "wsmprovhost.exe" and parent_process_name == "svchost.exe")
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\wsmprovhost.exe" parent_image="*\svchost.exe"
----------------------------------------
Technique ID: T1078.002
Technique Name: Domain Accounts
Kill Chain Phases: defense-evasion, persistence, privilege-escalation, initial-access
  Pseudocode:
    Title: Simultaneous Logins on a Host
    
    
    Title: Pseudocode
    users_list = search UserSession:Login
    users_grouped = group users_list by hostname
    users_grouped = from users_grouped select min(time) as earliest_time, max(time) as latest_time count(user) as user_count
    multiple_logins = filter users_grouped where (latest_time - earliest_time <= 1 hour and user_count > 1)
    output multiple_logins
    
    Title: 
    users_list = search UserSession:Login
    users_grouped = group users_list by hostname
    users_grouped = from users_grouped select min(time) as earliest_time, max(time) as latest_time count(user) as user_count
    multiple_logins = filter users_grouped where (latest_time - earliest_time <= 1 hour and user_count > 1)
    output multiple_logins
    Title: User Logged in to Multiple Hosts
    
    Title: SMB Write Request
    
    
    Title: Pseudocode
    flow = search Flow:Message
    smb_write = filter flow where (dest_port == "445" and protocol == "smb.write")
    smb_write.file_name = smb_write.proto_info.file_name
    output smb_write
    
    Title: 
    flow = search Flow:Message
    smb_write = filter flow where (dest_port == "445" and protocol == "smb.write")
    smb_write.file_name = smb_write.proto_info.file_name
    output smb_write
    Title: SMB Copy and Execution
    
    
    Title: Pseudocode
    process = search Process:Create
    smb_write = run Analytic:CAR-2013-05-003
    remote_start = join (smb_write, process) where (
     smb_write.hostname == process.hostname and
     smb_write.file_path == process.image_path
     (smb_write.time < process.time)
    )
    output remote_start
    
    Title: 
    process = search Process:Create
    smb_write = run Analytic:CAR-2013-05-003
    remote_start = join (smb_write, process) where (
     smb_write.hostname == process.hostname and
     smb_write.file_path == process.image_path
     (smb_write.time < process.time)
    )
    output remote_start
    Title: User Login Activity Monitoring
    
    
    Title: Account Logon with Filtering (Pseudocode)
    logon_events = search User_Session:Login
    filtered_logons = filter logon_events where (
      user NOT IN TOP30(user))
    output filtered_logons
    
    Title: Account Logon with Filtering (Splunk)
    index=__your_win_event_log_index__ EventCode=4624|search NOT [search index=__your_win_event_log_index__ EventCode=4624|top 30 Account_Name|table Account_Name]
    
    Title: Account Logon with Filtering (Dnif, Sysmon native)
    _fetch * from event where $LogName=WINDOWS-NXLOG-AUDIT AND $SubSystem=AUTHENTICATION AND $Action=LOGIN group count_unique $ScopeID, $User limit 30
    >>_store in_disk david_test win_top_30 stack_replace
    >>_fetch * from event where $LogName=WINDOWS-NXLOG-AUDIT AND $SubSystem=AUTHENTICATION AND $Action=LOGIN limit 10000
    >>_checkif lookup david_test win_top_30 join $ScopeID = $ScopeID str_compare $User eq $User exclude
    
    Title: 
    logon_events = search User_Session:Login
    filtered_logons = filter logon_events where (
      user NOT IN TOP30(user))
    output filtered_logons
    
    Title: Account Logon with Filtering (Splunk)
    index=__your_win_event_log_index__ EventCode=4624|search NOT [search index=__your_win_event_log_index__ EventCode=4624|top 30 Account_Name|table Account_Name]
    
    Title: Account Logon with Filtering (Dnif, Sysmon native)
    _fetch * from event where $LogName=WINDOWS-NXLOG-AUDIT AND $SubSystem=AUTHENTICATION AND $Action=LOGIN group count_unique $ScopeID, $User limit 30
    >>_store in_disk david_test win_top_30 stack_replace
    >>_fetch * from event where $LogName=WINDOWS-NXLOG-AUDIT AND $SubSystem=AUTHENTICATION AND $Action=LOGIN limit 10000
    >>_checkif lookup david_test win_top_30 join $ScopeID = $ScopeID str_compare $User eq $User exclude
----------------------------------------
Technique ID: T1059.003
Technique Name: Windows Command Shell
Kill Chain Phases: execution
  Pseudocode:
    Title: Processes Spawning cmd.exe
    
    
    Title: Pseudocode
    process = search Process:Create
    cmd = filter process where (exe == "cmd.exe")
    output cmd
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $Process=regex(.*cmd\.exe.*)i limit 100
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\cmd.exe"
    
    Title: 
    process = search Process:Create
    cmd = filter process where (exe == "cmd.exe")
    output cmd
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $Process=regex(.*cmd\.exe.*)i limit 100
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\cmd.exe"
    Title: Outlier Parents of Cmd
    
    
    Title: Pseudocode
    processes = search Process:Create
    cmd = filter processes where (exe == "cmd.exe")
    cmd = from cmd select parent_exe
    historic_cmd = filter cmd (where timestamp < now - 1 day AND timestamp > now - 1 day)
    current_cmd = filter cmd (where timestamp >= now - 1 day)
    new_cmd = historic_cmd - current_cmd
    output new_cmd
    
    Title: 
    processes = search Process:Create
    cmd = filter processes where (exe == "cmd.exe")
    cmd = from cmd select parent_exe
    historic_cmd = filter cmd (where timestamp < now - 1 day AND timestamp > now - 1 day)
    current_cmd = filter cmd (where timestamp >= now - 1 day)
    new_cmd = historic_cmd - current_cmd
    output new_cmd
----------------------------------------
