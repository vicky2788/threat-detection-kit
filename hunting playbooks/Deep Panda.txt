Technique ID: T1218.010
Technique Name: Regsvr32
Kill Chain Phases: defense-evasion
  Pseudocode:
    Title: Generic Regsvr32
    
    
    Title: Main Pattern (Splunk, Sysmon native)
    index=__your_sysmon_data__ EventCode=1 regsvr32.exe | search ParentImage="*regsvr32.exe" AND Image!="*regsvr32.exe*"
    
    Title: Main Pattern - pseudocode (Pseudocode, CAR)
    processes = search Process:Create
    regsvr_processes = filter processes where (
      parent_image_path == "*regsvr32.exe" and image_path != "*regsvr32.exe*"
     )
    output regsvr_processes
    
    Title: New items since last month (Splunk, Sysmon native)
    index=__your_sysmon_data__ earliest=-d@d latest=now() EventCode=1 regsvr32.exe | search ParentImage="*regsvr32.exe" AND Image!="*regsvr32.exe*" | search NOT [
    search index=__your_sysmon_data__ earliest=-60d@d latest=-30d@d EventCode=1 regsvr32.exe | search ParentImage="*regsvr32.exe" AND Image!="*regsvr32.exe*" | dedup CommandLine | fields CommandLine ]
    
    Title: Spawning child processes (Splunk, Sysmon native)
    index=__your_sysmon_data__ EventCode=1 (ParentImage="C:\\Windows\\System32\\regsvr32.exe" OR ParentImage="C:\\Windows\\SysWOW64\\regsvr32.exe") AND Image!="C:\\Windows\\System32\\regsvr32.exe" AND Image!="C:\\Windows\\SysWOW64\\regsvr32.exe" AND Image!="C:\\WINDOWS\\System32\\regsvr32.exe" AND Image!="C:\\WINDOWS\\SysWOW64\\regsvr32.exe" AND Image!="C:\\Windows\\SysWOW64\\WerFault.exe" AND Image!="C:\\Windows\\System32\\wevtutil.exe" AND Image!="C:\\Windows\\System32\\WerFault.exe"|stats values(ComputerName) as "Computer Name" values(ParentCommandLine) as "Parent Command Line" count(Image) as ImageCount by Image
    
    Title: Spawning child processes - pseudocode (Pseudocode, CAR)
    processes = search Process:Create
    regsvr_processes = filter processes where (
      (parent_image_path == "C:\Windows\System32\regsvr32.exe" or parent_image_path == "C:\Windows\SysWOW64\regsvr32.exe") and
      image_path != "C:\Windows\System32\regsvr32.exe" and
      image_path != "C:\Windows\SysWOW64\regsvr32.exe" and
      image_path != "C:\Windows\SysWOW64\WerFault.exe" and
      image_path != "C:\Windows\System32\WerFault.exe" and
      image_path != "C:\Windows\System32\wevtutil.exe"
     )
    output regsvr_processes
    
    Title: Loading unsigned images (Splunk, Sysmon native)
    index=__your_sysmon_data__ EventCode=7 (Image="C:\\Windows\\System32\\regsvr32.exe" OR Image="C:\\Windows\\SysWOW64\\regsvr32.exe") Signed=false ImageLoaded!="C:\\Program Files*" ImageLoaded!="C:\\Windows\\*"|stats values(ComputerName) as "Computer Name" count(ImageLoaded) as ImageLoadedCount by ImageLoaded
    
    Title: Loading unsigned images - pseudocode (Pseudocode, CAR)
    modules = search Module:Load
    unsigned_modules = filter modules where (
      (image_path == "C:\Windows\System32\regsvr32.exe" or image_path == "C:\Windows\SysWOW64\regsvr32.exe") and
      signer == null and
      module_path != "C:\Program Files*" and
      module_path != "C:\Windows\*"
    )
    output unsigned_modules
    
    Title: 
    processes = search Process:Create
    regsvr_processes = filter processes where (
      parent_image_path == "*regsvr32.exe" and image_path != "*regsvr32.exe*"
     )
    output regsvr_processes
    
    Title: New items since last month (Splunk, Sysmon native)
    index=__your_sysmon_data__ earliest=-d@d latest=now() EventCode=1 regsvr32.exe | search ParentImage="*regsvr32.exe" AND Image!="*regsvr32.exe*" | search NOT [
    search index=__your_sysmon_data__ earliest=-60d@d latest=-30d@d EventCode=1 regsvr32.exe | search ParentImage="*regsvr32.exe" AND Image!="*regsvr32.exe*" | dedup CommandLine | fields CommandLine ]
    
    Title: Spawning child processes (Splunk, Sysmon native)
    index=__your_sysmon_data__ EventCode=1 (ParentImage="C:\\Windows\\System32\\regsvr32.exe" OR ParentImage="C:\\Windows\\SysWOW64\\regsvr32.exe") AND Image!="C:\\Windows\\System32\\regsvr32.exe" AND Image!="C:\\Windows\\SysWOW64\\regsvr32.exe" AND Image!="C:\\WINDOWS\\System32\\regsvr32.exe" AND Image!="C:\\WINDOWS\\SysWOW64\\regsvr32.exe" AND Image!="C:\\Windows\\SysWOW64\\WerFault.exe" AND Image!="C:\\Windows\\System32\\wevtutil.exe" AND Image!="C:\\Windows\\System32\\WerFault.exe"|stats values(ComputerName) as "Computer Name" values(ParentCommandLine) as "Parent Command Line" count(Image) as ImageCount by Image
    
    Title: Spawning child processes - pseudocode (Pseudocode, CAR)
    processes = search Process:Create
    regsvr_processes = filter processes where (
      (parent_image_path == "C:\Windows\System32\regsvr32.exe" or parent_image_path == "C:\Windows\SysWOW64\regsvr32.exe") and
      image_path != "C:\Windows\System32\regsvr32.exe" and
      image_path != "C:\Windows\SysWOW64\regsvr32.exe" and
      image_path != "C:\Windows\SysWOW64\WerFault.exe" and
      image_path != "C:\Windows\System32\WerFault.exe" and
      image_path != "C:\Windows\System32\wevtutil.exe"
     )
    output regsvr_processes
    
    Title: Loading unsigned images (Splunk, Sysmon native)
    index=__your_sysmon_data__ EventCode=7 (Image="C:\\Windows\\System32\\regsvr32.exe" OR Image="C:\\Windows\\SysWOW64\\regsvr32.exe") Signed=false ImageLoaded!="C:\\Program Files*" ImageLoaded!="C:\\Windows\\*"|stats values(ComputerName) as "Computer Name" count(ImageLoaded) as ImageLoadedCount by ImageLoaded
    
    Title: Loading unsigned images - pseudocode (Pseudocode, CAR)
    modules = search Module:Load
    unsigned_modules = filter modules where (
      (image_path == "C:\Windows\System32\regsvr32.exe" or image_path == "C:\Windows\SysWOW64\regsvr32.exe") and
      signer == null and
      module_path != "C:\Program Files*" and
      module_path != "C:\Windows\*"
    )
    output unsigned_modules
    
    Title: 
    processes = search Process:Create
    regsvr_processes = filter processes where (
      (parent_image_path == "C:\Windows\System32\regsvr32.exe" or parent_image_path == "C:\Windows\SysWOW64\regsvr32.exe") and
      image_path != "C:\Windows\System32\regsvr32.exe" and
      image_path != "C:\Windows\SysWOW64\regsvr32.exe" and
      image_path != "C:\Windows\SysWOW64\WerFault.exe" and
      image_path != "C:\Windows\System32\WerFault.exe" and
      image_path != "C:\Windows\System32\wevtutil.exe"
     )
    output regsvr_processes
    
    Title: Loading unsigned images (Splunk, Sysmon native)
    index=__your_sysmon_data__ EventCode=7 (Image="C:\\Windows\\System32\\regsvr32.exe" OR Image="C:\\Windows\\SysWOW64\\regsvr32.exe") Signed=false ImageLoaded!="C:\\Program Files*" ImageLoaded!="C:\\Windows\\*"|stats values(ComputerName) as "Computer Name" count(ImageLoaded) as ImageLoadedCount by ImageLoaded
    
    Title: Loading unsigned images - pseudocode (Pseudocode, CAR)
    modules = search Module:Load
    unsigned_modules = filter modules where (
      (image_path == "C:\Windows\System32\regsvr32.exe" or image_path == "C:\Windows\SysWOW64\regsvr32.exe") and
      signer == null and
      module_path != "C:\Program Files*" and
      module_path != "C:\Windows\*"
    )
    output unsigned_modules
    
    Title: 
    modules = search Module:Load
    unsigned_modules = filter modules where (
      (image_path == "C:\Windows\System32\regsvr32.exe" or image_path == "C:\Windows\SysWOW64\regsvr32.exe") and
      signer == null and
      module_path != "C:\Program Files*" and
      module_path != "C:\Windows\*"
    )
    output unsigned_modules
    Title: Squiblydoo
    
    
    Title: Splunk, Sysmon native
    index=__your_sysmon_events__ EventCode=1 regsvr32.exe scrobj.dll | search Image="*regsvr32.exe"
    
    Title: Eql, EQL native
    process where subtype.create and
      (process_path == "*regsvr32.exe" and command_line == "*scrobj.dll")
    
    Title: Psuedocode, CAR
    processes = search Process:Create
    squiblydoo_processes = filter processes where (
      image_path == "*regsvr32.exe" and command_line == "*scrobj.dll"
      )
    output squiblydoo_processes
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\regsvr32.exe" command="*scrobj.dll"
----------------------------------------
Technique ID: T1059.001
Technique Name: PowerShell
Kill Chain Phases: execution
  Pseudocode:
    Title: Powershell Execution
    
    
    Title: Pseudocode
    process = search Process:Create
    powershell = filter process where (exe == "powershell.exe" AND parent_exe != "explorer.exe" )
    output powershell
    
    Title: Splunk, Sysmon native
    index=__your_sysmon_index__ EventCode=1 Image="C:\\Windows\\*\\powershell.exe" ParentImage!="C:\\Windows\\explorer.exe"|stats values(CommandLine) as "Command Lines" values(ParentImage) as "Parent Images" by ComputerName
    
    Title: Eql, EQL native
    process where subtype.create and
      (process_name == "powershell.exe" and parent_process_name != "explorer.exe")
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $App=powershell.exe NOT $ParentProcess=regex(.*explorer.exe.*)i limit 30
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\powershell.exe" -parent_image="C:\Windows\explorer.exe"
    
    Title: 
    process = search Process:Create
    powershell = filter process where (exe == "powershell.exe" AND parent_exe != "explorer.exe" )
    output powershell
    
    Title: Splunk, Sysmon native
    index=__your_sysmon_index__ EventCode=1 Image="C:\\Windows\\*\\powershell.exe" ParentImage!="C:\\Windows\\explorer.exe"|stats values(CommandLine) as "Command Lines" values(ParentImage) as "Parent Images" by ComputerName
    
    Title: Eql, EQL native
    process where subtype.create and
      (process_name == "powershell.exe" and parent_process_name != "explorer.exe")
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $App=powershell.exe NOT $ParentProcess=regex(.*explorer.exe.*)i limit 30
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\powershell.exe" -parent_image="C:\Windows\explorer.exe"
    Title: Remote PowerShell Sessions
    
    
    Title: Pseudocode
    process = search Process:Create
    wsmprovhost = filter process where (exe == "wsmprovhost.exe" and parent_exe == "svchost.exe")
    
    Title: Eql, EQL native
    process where subtype.create and
      (process_name == "wsmprovhost.exe" and parent_process_name == "svchost.exe")
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\wsmprovhost.exe" parent_image="*\svchost.exe"
    
    Title: 
    process = search Process:Create
    wsmprovhost = filter process where (exe == "wsmprovhost.exe" and parent_exe == "svchost.exe")
    
    Title: Eql, EQL native
    process where subtype.create and
      (process_name == "wsmprovhost.exe" and parent_process_name == "svchost.exe")
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image="*\wsmprovhost.exe" parent_image="*\svchost.exe"
----------------------------------------
Technique ID: T1546.008
Technique Name: Accessibility Features
Kill Chain Phases: privilege-escalation, persistence
  Pseudocode:
    Title: Autorun Differences
    
    Title: Debuggers for Accessibility Applications
    
    
    Title: Pseudocode
    process = search Process:Create
    debuggers = filter process where (command_line match "$.* .*(sethcutilmanosknarratormagnify)\.exe")
    output debuggers
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 command IN ["$* *sethc.exe", "$* *utilman.exe", "$* *osk.exe", "$* *narrator.exe", "$* *magnify.exe"]
    
    Title: Test Case 1
    cmd.exe Magnify.exe
    
    Title: 
    process = search Process:Create
    debuggers = filter process where (command_line match "$.* .*(sethcutilmanosknarratormagnify)\.exe")
    output debuggers
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 command IN ["$* *sethc.exe", "$* *utilman.exe", "$* *osk.exe", "$* *narrator.exe", "$* *magnify.exe"]
    
    Title: Test Case 1
    cmd.exe Magnify.exe
    Title: Command Launched from WinLogon
    
    
    Title: Pseudocode
    processes = search Process:Create
    winlogon_cmd = filter processes where (parent_exe == "winlogon.exe" and exe == "cmd.exe")
    output winlogon_cmd
    
    Title: Splunk, Sysmon native
    index=__your_sysmon_index__ EventCode=1 ParentImage="C:\\Windows\\*\\winlogon.exe" Image="C:\\Windows\\*\\cmd.exe"
    
    Title: Eql, EQL native
    process where subtype.create and
      (process_name == "cmd.exe" and parent_process_name == "winlogon.exe")
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 parent_image="C:\Windows\System32\winlogon.exe" parent_image="C:\Windows\System32\cmd.exe"
    
    Title: 
    processes = search Process:Create
    winlogon_cmd = filter processes where (parent_exe == "winlogon.exe" and exe == "cmd.exe")
    output winlogon_cmd
    
    Title: Splunk, Sysmon native
    index=__your_sysmon_index__ EventCode=1 ParentImage="C:\\Windows\\*\\winlogon.exe" Image="C:\\Windows\\*\\cmd.exe"
    
    Title: Eql, EQL native
    process where subtype.create and
      (process_name == "cmd.exe" and parent_process_name == "winlogon.exe")
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 parent_image="C:\Windows\System32\winlogon.exe" parent_image="C:\Windows\System32\cmd.exe"
----------------------------------------
Technique ID: T1021.002
Technique Name: SMB/Windows Admin Shares
Kill Chain Phases: lateral-movement
  Pseudocode:
    Title: SMB Events Monitoring
    
    
    Title: Pseudocode
    flow = search Flow:Message
    smb_events = filter flow where (dest_port == "445" and protocol == "smb")
    smb_events.file_name = smb_events.proto_info.file_name
    output smb_write
    
    Title: 
    flow = search Flow:Message
    smb_events = filter flow where (dest_port == "445" and protocol == "smb")
    smb_events.file_name = smb_events.proto_info.file_name
    output smb_write
    Title: Quick execution of a series of suspicious commands
    
    
    Title: Pseudocode
    processes = search Process:Create
    reg_processes = filter processes where (exe == "arp.exe" or exe == "at.exe" or exe == "attrib.exe"
     or exe == "cscript.exe" or exe == "dsquery.exe" or exe == "hostname.exe"
     or exe == "ipconfig.exe" or exe == "mimikatz.exe" or exe == "nbstat.exe"
     or exe == "net.exe" or exe == "netsh.exe" or exe == "nslookup.exe"
     or exe == "ping.exe" or exe == "quser.exe" or exe == "qwinsta.exe"
     or exe == "reg.exe" or exe == "runas.exe" or exe == "sc.exe"
     or exe == "schtasks.exe" or exe == "ssh.exe" or exe == "systeminfo.exe"
     or exe == "taskkill.exe" or exe == "telnet.exe" or exe == "tracert.exe"
     or exe == "wscript.exe" or exe == "xcopy.exe")
    reg_grouped = group reg by hostname, ppid where(max time between two events is 30 minutes)
    output reg_grouped
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $App=regex(arp\.exe|at\.exe|attrib\.exe|cscript\.exe|dsquery\.exe|hostname\.exe|ipconfig\.exe|mimikatz.exe|nbstat\.exe|net\.exe|netsh\.exe|nslookup\.exe|ping\.exe|quser\.exe|qwinsta\.exe|reg\.exe|runas\.exe|sc\.exe|schtasks\.exe|ssh\.exe|systeminfo\.exe|taskkill\.exe|telnet\.exe|tracert\.exe|wscript\.exe|xcopy\.exe)i group count_unique $App limit 100
    >>_agg count
    >>_checkif int_compare Count > 1 include
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image IN ["*\arp.exe", "*\at.exe", "*\attrib.exe", "*\cscript.exe", "*\dsquery.exe", "*\hostname.exe", "*\ipconfig.exe", "*\mimikatz.exe", "*\nbstat.exe", "*\net.exe", "*\netsh.exe", "*\nslookup.exe", "*\ping.exe", "*\quser.exe", "*\qwinsta.exe", "*\reg.exe", "*\runas.exe", "*\sc.exe", "*\schtasks.exe", "*\ssh.exe", "*\systeminfo.exe", "*\taskkill.exe", "*\telnet.exe", "*\tracert.exe", "*\wscript.exe", "*\xcopy.exe"]
    | chart count() as cnt by host
    | search cnt > 1
    
    Title: Test Case 1
    ipconfig /all
    hostname
    systeminfo
    reg.exe Query HKLM\Software\Microsoft
    
    Title: 
    processes = search Process:Create
    reg_processes = filter processes where (exe == "arp.exe" or exe == "at.exe" or exe == "attrib.exe"
     or exe == "cscript.exe" or exe == "dsquery.exe" or exe == "hostname.exe"
     or exe == "ipconfig.exe" or exe == "mimikatz.exe" or exe == "nbstat.exe"
     or exe == "net.exe" or exe == "netsh.exe" or exe == "nslookup.exe"
     or exe == "ping.exe" or exe == "quser.exe" or exe == "qwinsta.exe"
     or exe == "reg.exe" or exe == "runas.exe" or exe == "sc.exe"
     or exe == "schtasks.exe" or exe == "ssh.exe" or exe == "systeminfo.exe"
     or exe == "taskkill.exe" or exe == "telnet.exe" or exe == "tracert.exe"
     or exe == "wscript.exe" or exe == "xcopy.exe")
    reg_grouped = group reg by hostname, ppid where(max time between two events is 30 minutes)
    output reg_grouped
    
    Title: Dnif, Sysmon native
    _fetch * from event where $LogName=WINDOWS-SYSMON AND $EventID=1 AND $App=regex(arp\.exe|at\.exe|attrib\.exe|cscript\.exe|dsquery\.exe|hostname\.exe|ipconfig\.exe|mimikatz.exe|nbstat\.exe|net\.exe|netsh\.exe|nslookup\.exe|ping\.exe|quser\.exe|qwinsta\.exe|reg\.exe|runas\.exe|sc\.exe|schtasks\.exe|ssh\.exe|systeminfo\.exe|taskkill\.exe|telnet\.exe|tracert\.exe|wscript\.exe|xcopy\.exe)i group count_unique $App limit 100
    >>_agg count
    >>_checkif int_compare Count > 1 include
    
    Title: Logpoint, LogPoint native
    norm_id=WindowsSysmon event_id=1 image IN ["*\arp.exe", "*\at.exe", "*\attrib.exe", "*\cscript.exe", "*\dsquery.exe", "*\hostname.exe", "*\ipconfig.exe", "*\mimikatz.exe", "*\nbstat.exe", "*\net.exe", "*\netsh.exe", "*\nslookup.exe", "*\ping.exe", "*\quser.exe", "*\qwinsta.exe", "*\reg.exe", "*\runas.exe", "*\sc.exe", "*\schtasks.exe", "*\ssh.exe", "*\systeminfo.exe", "*\taskkill.exe", "*\telnet.exe", "*\tracert.exe", "*\wscript.exe", "*\xcopy.exe"]
    | chart count() as cnt by host
    | search cnt > 1
    
    Title: Test Case 1
    ipconfig /all
    hostname
    systeminfo
    reg.exe Query HKLM\Software\Microsoft
    Title: SMB Write Request
    
    
    Title: Pseudocode
    flow = search Flow:Message
    smb_write = filter flow where (dest_port == "445" and protocol == "smb.write")
    smb_write.file_name = smb_write.proto_info.file_name
    output smb_write
    
    Title: 
    flow = search Flow:Message
    smb_write = filter flow where (dest_port == "445" and protocol == "smb.write")
    smb_write.file_name = smb_write.proto_info.file_name
    output smb_write
    Title: SMB Copy and Execution
    
    
    Title: Pseudocode
    process = search Process:Create
    smb_write = run Analytic:CAR-2013-05-003
    remote_start = join (smb_write, process) where (
     smb_write.hostname == process.hostname and
     smb_write.file_path == process.image_path
     (smb_write.time < process.time)
    )
    output remote_start
    
    Title: 
    process = search Process:Create
    smb_write = run Analytic:CAR-2013-05-003
    remote_start = join (smb_write, process) where (
     smb_write.hostname == process.hostname and
     smb_write.file_path == process.image_path
     (smb_write.time < process.time)
    )
    output remote_start
    Title: RPC Activity
    
    
    Title: Pseudocode
    flows = search Flow:Start
    rpc_mapper = filter flows where (dest_port == 135)
    rpc_endpoint = filter flows where (dest_port >= 49152 and src_port >= 49152)
    rpc = join rpc_mapper, rpc_endpoint where (
     (rpc_mapper.time < rpc_endpoint.time < rpc_mapper.time + 2 seconds) and
     (rpc_mapper.src_ip == rpc_endpoint.src_ip and rpc_mapper.dest_ip == rpc_endpoint.dest_ip)
    )
    output rpc
    
    Title: 
    flows = search Flow:Start
    rpc_mapper = filter flows where (dest_port == 135)
    rpc_endpoint = filter flows where (dest_port >= 49152 and src_port >= 49152)
    rpc = join rpc_mapper, rpc_endpoint where (
     (rpc_mapper.time < rpc_endpoint.time < rpc_mapper.time + 2 seconds) and
     (rpc_mapper.src_ip == rpc_endpoint.src_ip and rpc_mapper.dest_ip == rpc_endpoint.dest_ip)
    )
    output rpc
----------------------------------------
